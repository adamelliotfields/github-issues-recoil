{"version":3,"sources":["misc/service-worker.js","index.jsx","services/github.js","states/index.js","components/RepoSearchForm.jsx","components/IssueLabels.jsx","components/UserWithAvatar.jsx","utils/index.js","components/IssuesListPage.jsx","components/IssueDetailsPage.jsx","components/App.jsx"],"names":["Boolean","window","location","hostname","match","unregister","a","navigator","serviceWorker","ready","console","error","message","root","document","getElementById","render","App","require","default","ReactDOM","StrictMode","GITHUB_API_TOKEN","process","REACT_APP_GITHUB_API_TOKEN","axiosConfig","headers","Authorization","axiosInstance","axios","create","getPageCount","pageLinks","Object","keys","length","first","prev","isLastPage","parseInt","page","last","getIssues","org","repo","url","get","issues","data","parseLinkHeader","link","pageCount","getRepoDetails","getComments","displayState","atom","key","displayType","issueId","repoState","selector","openIssuesCount","open_issues_count","issuesState","ids","map","issue","number","sort","b","entities","forEach","commentsState","commentsUrl","comments_url","comments","RepoSearchForm","useRecoilState","display","setDisplay","useState","currentOrg","setCurrentOrg","currentRepo","setCurrentRepo","formElements","id","label","value","onChange","e","target","element","className","htmlFor","aria-label","type","onClick","IssueLabels","labels","style","border","color","boxShadow","name","UserWithAvatar","user","imgMaxWidth","href","login","rel","maxWidth","src","avatar_url","alt","defaultProps","renderer","marked","Renderer","title","text","renderHtmlFromMarkdown","markdown","markdownWithMentionLinks","replace","insertMentionLinks","dirtyHtml","DOMPurify","sanitize","ADD_ATTR","IssueIcon","viewBox","version","width","height","aria-hidden","fillRule","d","PullRequestIcon","IssueCommentsWithIcon","IssuesListPageLoading","IssuesListPageError","toString","IssuesListPage","useRecoilValue","issueNumber","pluralizedIssue","pageNumber","Array","from","_","i","role","tabIndex","preventDefault","stopPropagation","handleIssueLinkClick","cursor","textDecoration","pull_request","body","dangerouslySetInnerHTML","__html","forcePage","pageRangeDisplayed","marginPagesDisplayed","activeClassName","disabledClassName","breakClassName","onPageChange","selected","IssueDetailsPageLoading","IssueDetailsPageError","reload","IssueDetailsPage","useEffect","scrollTo","top","float","state","comment","resetKeys","fallbackRender","fallback"],"mappings":"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","file":"static/js/main.ea89d687.chunk.js","sourcesContent":["/* eslint-disable no-console */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nconst registerValidSW = async (swUrl, config) => {\n  try {\n    const registration = await navigator.serviceWorker.register(swUrl);\n\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n\n      if (installingWorker == null) return;\n\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log(\n              'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.',\n            );\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  } catch (error) {\n    console.error('Error during service worker registration:', error);\n  }\n};\n\nconst checkValidServiceWorker = async (swUrl, config) => {\n  try {\n    // Check if the service worker can be found. If it can't reload the page.\n    const response = await fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    });\n\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n\n    if (\n      response.status === 404 ||\n      (contentType != null && contentType.indexOf('javascript') === -1)\n    ) {\n      // No service worker found. Probably a different app. Reload the page.\n      const registration = await navigator.serviceWorker.ready;\n\n      await registration.unregister();\n\n      window.location.reload();\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  } catch (_) {\n    console.log('No internet connection found. App is running in offline mode.');\n  }\n};\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    // Our service worker won't work if PUBLIC_URL is on a different origin\n    // from what our page is served on. This might happen if a CDN is used to\n    // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n    if (publicUrl.origin !== window.location.origin) return;\n\n    window.addEventListener('load', async () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        await navigator.serviceWorker.ready;\n\n        console.log(\n          'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA',\n        );\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport async function unregister() {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registration = await navigator.serviceWorker.ready;\n      registration.unregister();\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n}\n","import './styles/index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\n\nimport * as serviceWorker from './misc/service-worker';\n\nconst { NODE_ENV } = process.env;\n\nconst root = document.getElementById('root');\n\nfunction render() {\n  // eslint-disable-next-line global-require\n  const App = require('./components/App').default;\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <RecoilRoot>\n        <App />\n      </RecoilRoot>\n    </React.StrictMode>,\n    root,\n  );\n}\n\nrender();\n\nif (\n  typeof NODE_ENV !== 'undefined' &&\n  NODE_ENV !== 'production' &&\n  NODE_ENV !== 'test' &&\n  module.hot\n) {\n  module.hot.accept('./components/App.jsx', render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n","import axios from 'axios';\nimport parseLinkHeader from 'parse-link-header';\n\nconst GITHUB_API_TOKEN = process.env.REACT_APP_GITHUB_API_TOKEN;\nconst GITHUB_API_REPOS_URL = 'https://api.github.com/repos';\nconst ISSUES_PER_PAGE = 25;\n\nconst axiosConfig =\n  typeof GITHUB_API_TOKEN !== 'undefined'\n    ? { headers: { Authorization: `token ${GITHUB_API_TOKEN}` } }\n    : {};\n\nconst axiosInstance = axios.create(axiosConfig);\n\n/**\n * @param {object} pageLinks\n * @returns {boolean}\n */\nconst isLastPage = (pageLinks) =>\n  Object.keys(pageLinks).length === 2 && pageLinks.first && pageLinks.prev;\n\n/**\n * @param {object} pageLinks\n * @returns {number}\n */\nconst getPageCount = (pageLinks) => {\n  if (!pageLinks) return 0;\n\n  const lastPage = isLastPage(pageLinks);\n\n  if (lastPage) return parseInt(pageLinks.prev.page, 10) + 1;\n\n  if (pageLinks.last) return parseInt(pageLinks.last.page, 10);\n\n  return 0;\n};\n\n/**\n * @param {string} org\n * @param {string} repo\n * @param {number} page\n * @returns {Promise<object>}\n */\nexport async function getIssues(org, repo, page) {\n  const url = `${GITHUB_API_REPOS_URL}/${org}/${repo}/issues?per_page=${ISSUES_PER_PAGE}&page=${page}`;\n  // We want errors to be caught by our Error Boundary components, so we won't be catching here.\n  const { headers, data: issues } = await axiosInstance.get(url);\n  const pageLinks = parseLinkHeader(headers.link);\n\n  let pageCount = 0;\n\n  if (pageLinks !== null) {\n    pageCount = getPageCount(pageLinks);\n  }\n\n  return {\n    pageLinks,\n    pageCount,\n    issues,\n  };\n}\n\n/**\n * @param {string} org\n * @param {string} repo\n * @returns {Promise<object>}\n */\nexport async function getRepoDetails(org, repo) {\n  const url = `${GITHUB_API_REPOS_URL}/${org}/${repo}`;\n  const { data } = await axiosInstance.get(url);\n  return data;\n}\n\n/**\n * @param {string} url\n * @returns {Promise<object>}\n */\nexport async function getComments(url) {\n  const { data } = await axiosInstance.get(url);\n  return data;\n}\n","import { atom, selector } from 'recoil';\n\nimport { getComments, getIssues, getRepoDetails } from '../services/github';\n\n// An atom is a unit of state. The default value is the initial state. Note that we cannot use\n// promises for a default value (we use selectors for that).\nexport const displayState = atom({\n  key: 'displayState',\n  default: {\n    org: 'facebook',\n    repo: 'react',\n    page: 1,\n    displayType: 'issues',\n    issueId: null,\n  },\n});\n\n// All of the selectors here are read-only, but they update based on changes to `displayState`.\n// Note that selectors can be writeable if they have a `set` method.\nexport const repoState = selector({\n  key: 'repoState',\n  get: async ({ get }) => {\n    // This state will update automatically when `displayState` changes.\n    const { org, repo } = get(displayState);\n    const { open_issues_count: openIssuesCount } = await getRepoDetails(org, repo);\n\n    // I'm returning an object just to be consistent with other atoms and selectors.\n    return {\n      openIssuesCount,\n    };\n  },\n});\n\nexport const issuesState = selector({\n  key: 'issuesState',\n  get: async ({ get }) => {\n    const { org, repo, page } = get(displayState);\n    const { pageLinks, pageCount, issues } = await getIssues(org, repo, page);\n\n    const ids = issues.map((issue) => issue.number).sort((a, b) => b - a);\n    const entities = {};\n\n    issues.forEach((issue) => {\n      entities[issue.number] = issue;\n    });\n\n    return {\n      ids,\n      entities,\n      pageCount,\n      pageLinks,\n    };\n  },\n});\n\nexport const commentsState = selector({\n  key: 'commentsState',\n  get: async ({ get }) => {\n    const { issueId } = get(displayState);\n    const { entities } = get(issuesState);\n    const { comments_url: commentsUrl } = entities[issueId];\n    const comments = await getComments(commentsUrl);\n\n    return {\n      comments,\n    };\n  },\n});\n","import React, { useState } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { displayState } from '../states';\n\nfunction RepoSearchForm() {\n  const [display, setDisplay] = useRecoilState(displayState);\n\n  const { org, repo } = display;\n\n  const [currentOrg, setCurrentOrg] = useState(org);\n  const [currentRepo, setCurrentRepo] = useState(repo);\n\n  const handleOrgInputChange = (e) => {\n    setCurrentOrg(e.target.value);\n  };\n\n  const handleRepoInputChange = (e) => {\n    setCurrentRepo(e.target.value);\n  };\n\n  const handleLoadRepoButtonClick = () => {\n    setDisplay({ ...display, org: currentOrg, repo: currentRepo, page: 1 });\n  };\n\n  const formElements = [\n    {\n      id: 'org',\n      label: 'Org',\n      value: currentOrg,\n      onChange: handleOrgInputChange,\n    },\n    {\n      id: 'repo',\n      label: 'Repo',\n      value: currentRepo,\n      onChange: handleRepoInputChange,\n    },\n  ];\n\n  return (\n    <form>\n      {formElements.map((element) => (\n        <div key={element.id} className=\"clearfix mb-2\">\n          <div className=\"col-1 text-right float-left mt-2 pr-2\">\n            <label htmlFor={element.id}>{element.label}</label>\n          </div>\n          <div className=\"col-11 float-right\">\n            <input\n              className=\"form-control input-block\"\n              aria-label={element.id}\n              id={element.id}\n              value={element.value}\n              onChange={element.onChange}\n            />\n          </div>\n        </div>\n      ))}\n      <div className=\"clearfix\">\n        <div className=\"col-11 offset-1\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-block\"\n            onClick={handleLoadRepoButtonClick}\n          >\n            Load Repo\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default RepoSearchForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction IssueLabels({ labels }) {\n  return (\n    <>\n      {labels.map((label) => (\n        <span\n          key={label.id}\n          className=\"Label text-gray mr-2\"\n          style={{\n            border: `1px solid #${label.color}`,\n            boxShadow: `0 0 2px #${label.color}`,\n          }}\n        >\n          {label.name}\n        </span>\n      ))}\n    </>\n  );\n}\n\nIssueLabels.propTypes = {\n  labels: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      color: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default IssueLabels;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction UserWithAvatar({ user, imgMaxWidth, style }) {\n  return (\n    <a\n      href={`https://github.com/${user.login}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      style={style}\n    >\n      <img\n        className=\"avatar d-block my-0 mx-auto\"\n        style={{ maxWidth: imgMaxWidth }}\n        src={user.avatar_url}\n        alt=\"\"\n      />\n      <span className=\"text-center\">{user.login}</span>\n    </a>\n  );\n}\n\nUserWithAvatar.defaultProps = {\n  style: {},\n  imgMaxWidth: '48px',\n};\n\nUserWithAvatar.propTypes = {\n  user: PropTypes.shape({\n    avatar_url: PropTypes.string.isRequired,\n    login: PropTypes.string.isRequired,\n  }).isRequired,\n  style: PropTypes.objectOf(PropTypes.any),\n  imgMaxWidth: PropTypes.string,\n};\n\nexport default UserWithAvatar;\n","/* eslint-disable import/prefer-default-export */\n\nimport DOMPurify from 'dompurify';\nimport marked from 'marked';\n\n// Customize the output for links when rendering HTML from Markdown.\nconst renderer = new marked.Renderer();\nrenderer.link = (href, title, text) =>\n  // prettier-ignore\n  `<a href=\"${href}\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"${title ?? ''}\">${text}</a>`;\n\n/**\n * @param {string} markdown\n * @returns {string}\n */\nconst insertMentionLinks = (markdown) =>\n  markdown.replace(/\\B(@([a-zA-Z0-9](-?[a-zA-Z0-9_])+))/g, `**[$1](https://github.com/$2)**`);\n\n/**\n * @param {string} markdown\n * @returns {string}\n */\nexport function renderHtmlFromMarkdown(markdown) {\n  const markdownWithMentionLinks = insertMentionLinks(markdown);\n  const dirtyHtml = marked(markdownWithMentionLinks, { renderer });\n  const cleanHtml = DOMPurify.sanitize(dirtyHtml, { ADD_ATTR: ['target'] });\n  return cleanHtml;\n}\n","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { useRecoilState, useRecoilValue } from 'recoil';\n\nimport IssueLabels from './IssueLabels';\nimport UserWithAvatar from './UserWithAvatar';\n\nimport { displayState, issuesState, repoState } from '../states';\n\nimport { renderHtmlFromMarkdown } from '../utils';\n\nconst IssueIcon = (\n  <span\n    className=\"tooltipped tooltipped-ne v-align-middle\"\n    aria-label=\"Open issue\"\n    style={{ color: '#6cc644' }}\n  >\n    <svg\n      className=\"octicon\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      height=\"16\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm9 3a1 1 0 11-2 0 1 1 0 012 0zm-.25-6.25a.75.75 0 00-1.5 0v3.5a.75.75 0 001.5 0v-3.5z\"\n      />\n    </svg>\n  </span>\n);\n\nconst PullRequestIcon = (\n  <span\n    className=\"tooltipped tooltipped-ne v-align-middle\"\n    aria-label=\"Open pull request\"\n    style={{ color: '#6cc644' }}\n  >\n    <svg\n      className=\"octicon\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      height=\"16\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z\"\n      />\n    </svg>\n  </span>\n);\n\n// eslint-disable-next-line react/prop-types\nconst IssueCommentsWithIcon = ({ comments }) => (\n  <div\n    className=\"float-right tooltipped tooltipped-nw tooltipped-align-right-2 mt-1\"\n    aria-label={`${comments} comments`}\n  >\n    <svg\n      className=\"octicon v-align-middle\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      height=\"16\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z\"\n      />\n    </svg>\n    <span className=\"text-small text-bold\">{` ${comments}`}</span>\n  </div>\n);\n\nexport function IssuesListPageLoading() {\n  return (\n    <h2>\n      Loading\n      <span className=\"AnimatedEllipsis\" />\n    </h2>\n  );\n}\n\n// eslint-disable-next-line react/prop-types\nexport function IssuesListPageError({ error }) {\n  return (\n    <>\n      <h2>Something went wrong...</h2>\n      <pre>{error.toString()}</pre>\n    </>\n  );\n}\n\nfunction IssuesListPage() {\n  const [display, setDisplay] = useRecoilState(displayState);\n  const { openIssuesCount } = useRecoilValue(repoState);\n  const { ids, entities, pageCount } = useRecoilValue(issuesState);\n\n  const { org, repo, page } = display;\n\n  const issues = ids.map((issueNumber) => entities[issueNumber]);\n\n  const pluralizedIssue = openIssuesCount === 1 ? 'issue' : 'issues';\n\n  const handlePageSelectChange = (e) => {\n    const pageNumber = parseInt(e.target.value, 10);\n    setDisplay({ ...display, page: pageNumber });\n  };\n\n  const handleIssueLinkClick = (e, number) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDisplay({ ...display, displayType: 'comments', issueId: number });\n  };\n\n  const handlePaginationLinkClick = ({ selected }) => {\n    // React Paginate passes an object with a zero-indexed `selected` property.\n    setDisplay({ ...display, page: selected + 1 });\n  };\n\n  return (\n    <>\n      <h2 className=\"mb-3\">\n        {openIssuesCount !== -1 && <span>{openIssuesCount}</span>}\n        {` open ${pluralizedIssue} for `}\n        <span>\n          <a href={`https://github.com/${org}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            {org}\n          </a>\n          {' / '}\n          <a href={`https://github.com/${org}/${repo}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            {repo}\n          </a>\n        </span>\n      </h2>\n\n      <form className=\"mb-4\">\n        <div className=\"clearfix\">\n          <div className=\"col-1 text-right float-left mt-1 pr-2\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"page\">Page</label>\n          </div>\n          <div className=\"col-11 float-right\">\n            <select\n              className=\"form-select select-sm\"\n              id=\"page\"\n              aria-label=\"page\"\n              value={page.toString()}\n              onChange={handlePageSelectChange}\n            >\n              {Array.from({ length: pageCount }, (_, i) => (\n                <option key={`option-${i + 1}`}>{i + 1}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </form>\n\n      {issues.map((issue) => (\n        <div key={issue.id} className=\"Box my-2\">\n          <div className=\"Box-header\">\n            <div className=\"clearfix\">\n              <div className=\"col-11 float-left\">\n                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid, jsx-a11y/click-events-have-key-events */}\n                <a\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  onClick={(e) => handleIssueLinkClick(e, issue.number)}\n                  style={{ cursor: 'pointer', textDecoration: 'none' }}\n                >\n                  {/* eslint-disable-next-line camelcase */}\n                  {issue?.pull_request ? PullRequestIcon : IssueIcon}\n                  <h3 className=\"Box-title f3 d-inline v-align-middle\">\n                    &nbsp;\n                    {issue.title}\n                    <span className=\"text-small text-gray text-bold ml-2\">{`#${issue.number} `}</span>\n                  </h3>\n                </a>\n              </div>\n              <div className=\"col-1 float-right\">\n                <IssueCommentsWithIcon comments={issue.comments} />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Box-body\">\n            <div className=\"clearfix\">\n              <div className=\"col-2 float-left text-center mt-1\">\n                <UserWithAvatar user={issue.user} />\n              </div>\n\n              <div className=\"col-10 float-right\">\n                {issue?.body?.length > 0 && (\n                  <details className=\"mb-2\">\n                    <summary className=\"btn-link\">\n                      Details&nbsp;\n                      <span className=\"dropdown-caret\" />\n                    </summary>\n                    <div\n                      className=\"markdown-body\"\n                      dangerouslySetInnerHTML={{\n                        __html: renderHtmlFromMarkdown(issue.body),\n                      }}\n                    />\n                  </details>\n                )}\n\n                {issue?.labels?.length > 0 && <IssueLabels labels={issue.labels} />}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n\n      <nav className=\"custom-paginate-container my-3\">\n        <ReactPaginate\n          forcePage={page - 1}\n          pageCount={pageCount}\n          pageRangeDisplayed={3}\n          marginPagesDisplayed={1}\n          activeClassName=\"current\"\n          disabledClassName=\"disabled\"\n          breakClassName=\"disabled\"\n          onPageChange={handlePaginationLinkClick}\n        />\n      </nav>\n    </>\n  );\n}\n\nexport default IssuesListPage;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRecoilState, useRecoilValue } from 'recoil';\n\nimport IssueLabels from './IssueLabels';\nimport UserWithAvatar from './UserWithAvatar';\n\nimport { commentsState, displayState, issuesState } from '../states';\n\nimport { renderHtmlFromMarkdown } from '../utils';\n\n// eslint-disable-next-line react/prop-types\nexport function IssueDetailsPageLoading({ issueId }) {\n  return (\n    <div className=\"Box border-0 border-md border-gray-dark\">\n      <div className=\"Box-header\">\n        <h2 className=\"Box-title f2\">\n          {`Loading issue #${issueId}`}\n          <span className=\"AnimatedEllipsis\" />\n        </h2>\n      </div>\n    </div>\n  );\n}\n\n// eslint-disable-next-line react/prop-types\nexport function IssueDetailsPageError({ issueId, error }) {\n  return (\n    <div className=\"Box border-0 border-md border-gray-dark mb-0 mb-md-3\">\n      <div className=\"Box-header\">\n        <h2 className=\"Box-title f2 mb-2\">{`Could not load issue #${issueId}`}</h2>\n        <div className=\"clearfix\">\n          <div className=\"col-3 float-left\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline\"\n              onClick={() => window.location.reload()}\n            >\n              Reload\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"Box-body border-0\">\n        <pre>{error.toString()}</pre>\n      </div>\n    </div>\n  );\n}\n\nfunction IssueDetailsPage({ issueId }) {\n  const [display, setDisplay] = useRecoilState(displayState);\n  const { entities } = useRecoilValue(issuesState);\n  const { comments } = useRecoilValue(commentsState);\n\n  const issue = entities[issueId];\n\n  const showIssuesList = () => {\n    setDisplay({ ...display, displayType: 'issues', issueId: null });\n  };\n\n  useEffect(() => {\n    window.scrollTo({ top: 0 });\n  });\n\n  // eslint-disable-next-line\n  return (\n    <div className=\"Box border-0 border-md border-gray-dark mb-3\">\n      <div className=\"Box-header\">\n        <h2 className=\"Box-title f2 mb-2\">\n          {issue.title}\n          <span className=\"text-small text-gray text-bold ml-2\">{`#${issue.number}`}</span>\n        </h2>\n        <div className=\"clearfix\">\n          <div className=\"col-3 float-left\">\n            <button type=\"button\" className=\"btn btn-outline\" onClick={showIssuesList}>\n              Back to Issues List\n            </button>\n          </div>\n          <div className=\"col-9 float-right\">\n            <UserWithAvatar user={issue.user} style={{ float: 'right' }} />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"Box-body border-0\">\n        <div className=\"clearfix mb-2\">\n          <div className=\"col-2 float-left\">\n            <span className=\"State State--green\">{issue.state}</span>\n          </div>\n          {issue?.labels?.length > 0 && (\n            <div className=\"col-10 float-right\">\n              <div className=\"float-right\">\n                <IssueLabels labels={issue.labels} />\n              </div>\n            </div>\n          )}\n        </div>\n\n        {issue?.body?.length > 0 && (\n          <div\n            className=\"markdown-body mb-4\"\n            dangerouslySetInnerHTML={{\n              __html: renderHtmlFromMarkdown(issue.body),\n            }}\n          />\n        )}\n\n        {comments?.length > 0 && (\n          <ul>\n            {comments.map((comment) => (\n              <li key={comment.id} className=\"Box-row\">\n                <div className=\"clearfix\">\n                  <div className=\"col-2 float-left text-center mt-2\">\n                    <UserWithAvatar user={comment.user} />\n                  </div>\n\n                  <div className=\"col-10 float-right\">\n                    <div\n                      className=\"markdown-body\"\n                      dangerouslySetInnerHTML={{\n                        __html: renderHtmlFromMarkdown(comment.body),\n                      }}\n                    />\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nIssueDetailsPage.propTypes = {\n  issueId: PropTypes.number.isRequired,\n};\n\nexport default IssueDetailsPage;\n","import React, { Suspense } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { useRecoilValue } from 'recoil';\n\nimport RepoSearchForm from './RepoSearchForm';\nimport IssuesListPage, { IssuesListPageLoading, IssuesListPageError } from './IssuesListPage';\nimport IssueDetailsPage, {\n  IssueDetailsPageLoading,\n  IssueDetailsPageError,\n} from './IssueDetailsPage';\n\nimport { displayState } from '../states';\n\nfunction App() {\n  const { org, repo, page, displayType, issueId } = useRecoilValue(displayState);\n\n  if (displayType === 'issues') {\n    return (\n      <div className=\"container-md mt-3 px-3 px-md-0\">\n        <div className=\"clearfix\">\n          <div className=\"col-12 mb-3\">\n            <h1 className=\"text-center mb-3\">GitHub Issues</h1>\n            <RepoSearchForm />\n          </div>\n\n          <div className=\"col-12 mt-2\">\n            <ErrorBoundary\n              // Reset keys are compared using Object.is, so we can't pass the display object.\n              resetKeys={[org, repo, page]}\n              fallbackRender={({ error }) => <IssuesListPageError error={error} />}\n            >\n              <Suspense fallback={<IssuesListPageLoading />}>\n                <IssuesListPage />\n              </Suspense>\n            </ErrorBoundary>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (displayType === 'comments') {\n    return (\n      <div className=\"container-md\">\n        <div className=\"clearfix\">\n          <div className=\"col-12 mt-0 mt-md-3\">\n            <ErrorBoundary\n              resetKeys={[displayType, issueId]}\n              fallbackRender={({ error }) => (\n                <IssueDetailsPageError issueId={issueId} error={error} />\n              )}\n            >\n              <Suspense fallback={<IssueDetailsPageLoading issueId={issueId} />}>\n                <IssueDetailsPage issueId={issueId} />\n              </Suspense>\n            </ErrorBoundary>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n}\n\nexport default App;\n"],"sourceRoot":""}